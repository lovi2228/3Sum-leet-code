class Solution {
public:

    ListNode* reverse(ListNode*head){
        ListNode* p=NULL;
        ListNode* n=NULL;
        // ListNode* c=head;
        while(head){
            n=head->next;
            head->next=p;

            p=head;
            head=n;
        }
        return p;
    }
    bool isPalindrome(ListNode* head) {
        if(head==NULL || head->next==NULL) return true;

        ListNode* slow=head;
        ListNode*fast=head;

        while(fast->next && fast->next->next){
            slow=slow->next;
            fast=fast->next->next;
        }

        slow->next=reverse(slow->next);
        slow=slow->next;

        while(slow!=NULL){
            if(head->val!=slow->val){
                return false;
            }
            slow=slow->next;
            head=head->next;
        }
        return true ;
        
    }
};
