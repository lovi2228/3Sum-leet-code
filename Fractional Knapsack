
/*
struct Item{
    int value;
    int weight;
};
*/

class Solution {
  public:
    // Function to get the maximum total value in the knapsack.
    bool static comp(Item a,Item b){
        double r1=(double)a.value/(double)a.weight;
        double r2=(double)b.value/(double)b.weight;
        return r1>r2;
    }
    double fractionalKnapsack(int w, Item arr[], int n) {
        sort(arr,arr+n,comp);
        int totw=0;
        double val=0;
        for(int i=0;i<n;i++){
            
                if(totw+arr[i].weight<=w){
                    val+=arr[i].value;
                    totw+=arr[i].weight;
                    // w-=totw;
                }
                else{
                    val+=(arr[i].value/(double)arr[i].weight)*(double)(w-totw);
                   break;
                }
            
        }
        return val;
    }
};
